{"version":3,"sources":["logo.svg","components/Planetarium/config.js","components/Planetarium/constellations.js","components/PlanetariumControls/Utils.js","components/PlanetariumControls/PlanetariumControls.js","components/Planetarium/Planetarium.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Planetarium_config","celestial","projection","form","width","window","innerWidth","center","background","fill","stroke","opacity","datapath","adaptable","stars","colors","names","style","limit","size","namestyle","font","align","baseline","propernamestyle","dsos","show","mw","constellations","linestyle","lines","graticule","equatorial","ecliptic","location","planets","which","symbols","sol","symbol","mer","ven","ter","lun","mar","cer","ves","jup","sat","ura","nep","plu","eri","lineStyle","textStyle","Constellation","paintConstellations","name","state","config","axios","get","concat","process","then","data","constellationsData","culture","selectOptions","jsonLine","type","features","map","constellation","push","id","points","properties","n","loc","geometry","coordinates","Celestial","clear","redraw","add","callback","error","json","console","warn","addConstellationsD3","pt","container","selectAll","each","d","setStyle","context","clip","mapProjection","setTextStyle","fillText","asterism","getData","transform","document","querySelectorAll","forEach","e","parentNode","removeChild","enter","append","attr","Utils","toggleClass","el","className","classList","toggle","classes","split","existingIndex","indexOf","splice","join","hasClass","contains","RegExp","test","removeClass","remove","replace","PlanetariumControls","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMenu","querySelector","target","innerHTML","toggleConstellations","toggleStarsNames","option","log","starsConfig","objectSpread","desig","setState","date","Date","proper","design","dtFormat","d3","time","format","zenith","geopos","zone","getTimezoneOffset","_this2","constellationsOptions","props","react_default","a","createElement","value","unshift","class","onClick","onChange","changeCulture","navigateToConstellation","toggleStars","Component","Planetarium","activeCulture","Constellations","navigationOptions","configCopy","apply","length","anims","z","zoomBy","param","duration","animate","loaded","showConstellations","display","Fragment","overflow","PlanetariumControls_PlanetariumControls_PlanetariumControls","App","Planetarium_Planetarium","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24e65947.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default {\n  celestial: {\n    projection: \"airy\",\n    //projection: \"equirectangular\",\n    form: true,\n    width: window.innerWidth,\n    center: [-65, 0],\n    //center: [180, 90],\n    background: { fill: \"#160048\", stroke: \"#160048\", opacity: 1, width: 1 },\n    datapath: \"./data/\",\n    adaptable: true,\n    stars: {\n      colors: true,\n      names: false,\n      style: { fill: \"#FEFFFF\", opacity: 1 },\n      limit: 6,\n      size: 5,\n      namestyle: {\n        fill: \"#ddddbb\", font: \"11px 'Open Sans', sans-serif\",\n        align: \"left\", baseline: \"top\"\n      },  // Style for star designations\n      propernamestyle: {\n        fill: \"#ddddbb\", font: \"11px 'Open Sans', sans-serif\",\n        align: \"right\", baseline: \"bottom\"\n      }, // Styles for star names\n    },\n    dsos: { show: false },\n    mw: {\n      style: { fill: \"#2C0089\", opacity: 0.1 }\n    },\n    constellations: {\n      show: false,\n      linestyle: { stroke: \"transparent\", width: 0, opacity: 0 },\n    },\n    lines: {\n      graticule: { show: true, stroke: \"#cccccc\", width: 0.6, opacity: 0.15 },\n      equatorial: { show: true, stroke: \"#cccccc\", width: 0.6, opacity: 0.4 },\n      ecliptic: { show: false }\n    },\n    location: true,\n    planets: {  //Show planet locations, if date-time is set\n      show: true,\n      // List of all objects to show\n      which: [\"sol\", \"mer\", \"ven\", \"ter\", \"lun\", \"mar\", \"jup\", \"sat\", \"ura\", \"nep\"],\n      // Font styles for planetary symbols\n      style: {\n        fill: \"#00ccff\", font: \"bold 22px 'Lucida Sans Unicode', Consolas, sans-serif\",\n        align: \"center\", baseline: \"middle\"\n      },\n      symbols: {  // Character and color for each symbol in 'which', simple circle \\u25cf\n        \"sol\": { symbol: \"\\u2609\", fill: \"#ffff00\" },\n        \"mer\": { symbol: \"\\u263f\", fill: \"#cccccc\" },\n        \"ven\": { symbol: \"\\u2640\", fill: \"#eeeecc\" },\n        \"ter\": { symbol: \"\\u2295\", fill: \"#00ffff\" },\n        \"lun\": { symbol: \"\\u25cf\", fill: \"#ffffff\" }, // overridden by generated cresent\n        \"mar\": { symbol: \"\\u2642\", fill: \"#ff9999\" },\n        \"cer\": { symbol: \"\\u26b3\", fill: \"#cccccc\" },\n        \"ves\": { symbol: \"\\u26b6\", fill: \"#cccccc\" },\n        \"jup\": { symbol: \"\\u2643\", fill: \"#ff9966\" },\n        \"sat\": { symbol: \"\\u2644\", fill: \"#ffcc66\" },\n        \"ura\": { symbol: \"\\u2645\", fill: \"#66ccff\" },\n        \"nep\": { symbol: \"\\u2646\", fill: \"#6666ff\" },\n        \"plu\": { symbol: \"\\u2647\", fill: \"#aaaaaa\" },\n        \"eri\": { symbol: \"\\u25cf\", fill: \"#eeeeee\" }\n      }\n    }\n  },\n\n  lineStyle: {\n    stroke: \"#FEFFFF\",\n    opacity: \".5\",\n    fill: \"transparent\",\n    width: 1\n  },\n  textStyle: {\n    fill: \"#fafafa\",\n    font: \"bold 15px 'Open Sans', sans-serif\",\n    align: \"center\",\n    baseline: \"middle\"\n  }\n}","import axios from 'axios';\n\nconst Constellation =  {\n  paintConstellations: (name, state, config) => {\n    return axios.get(`${process.env.REACT_APP_API_URL}/api/culture/` + name)\n      .then(data => {\n        const constellationsData = data.data.culture.constellations;\n\n        let selectOptions = [];\n\n        let constellations = constellationsData.map(constellation => {\n          selectOptions.push({ name: constellation.name, id: constellation.id, center: constellation.points[0][0] })\n          return {\n            \"type\": \"Feature\",\n            \"id\": constellation.name,\n            \"properties\": {\n              \"n\": constellation.name,\n              \"loc\": constellation.points[0][0]\n            }, \"geometry\": {\n              \"type\": \"MultiLineString\",\n              \"coordinates\": constellation.points\n            }\n          }\n        })\n\n        var jsonLine = {\n          \"type\": \"FeatureCollection\",\n          \"features\": constellations\n        };\n\n        window.Celestial.clear();\n\n        if (window.Celestial.redraw) {\n          window.Celestial.redraw();\n        }\n\n        window.Celestial.add({\n          type: \"line\", name: name, callback: (error, json) => {\n            if (error) return console.warn(error);\n            Constellation.addConstellationsD3(jsonLine, state);\n          }, redraw: function () {\n            let pt;\n            window.Celestial.container.selectAll(\".ast\").each(function (d) {\n              window.Celestial.setStyle(config.lineStyle);\n              window.Celestial.map(d);\n              window.Celestial.context.stroke();\n\n              if (window.Celestial.clip(d.properties.loc)) {\n                pt = window.Celestial.mapProjection(d.properties.loc);\n                window.Celestial.setTextStyle(config.textStyle);\n                window.Celestial.context.fillText(d.properties.n, pt[0], pt[1]);\n              }\n            });\n          }\n        });\n        if (window.Celestial.container)\n          Constellation.addConstellationsD3(jsonLine, state);\n\n        \n        return selectOptions\n      })\n  }, \n\n  addConstellationsD3: (jsonLine, state) => {\n    var asterism = window.Celestial.getData(jsonLine, state.config.transform);\n\n    document.querySelectorAll(\"path.ast\").forEach(e => e.parentNode.removeChild(e));\n\n    window.Celestial.container.selectAll(\".asterisms\")\n      .data(asterism.features)\n      .enter().append(\"path\")\n      .attr(\"class\", \"ast\");\n\n    window.Celestial.redraw();\n  }\n}\n\nexport default Constellation;","const Utils = {\n  toggleClass: (el, className) => {\n    if (el.classList) {\n      el.classList.toggle(className);\n    } else {\n      var classes = el.className.split(' ');\n      var existingIndex = classes.indexOf(className);\n\n      if (existingIndex >= 0)\n        classes.splice(existingIndex, 1);\n      else\n        classes.push(className);\n\n      el.className = classes.join(' ');\n    }\n\n    return Utils.hasClass(el, className)\n  },\n\n  hasClass: (el, className) => {\n    if (el.classList)\n      return (el.classList.contains(className));\n    else\n      return (new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className))\n  },\n\n  removeClass: (el, className) => {\n    if (el.classList)\n      el.classList.remove(className);\n    else\n      el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n  }\n}\n\nexport default Utils;","import React, { Component } from 'react';\n\nimport './PlanetariumControls.scss'\n\nimport Utils from './Utils'\n\nexport default class PlanetariumControls extends Component {\n  constructor() {\n    super();\n\n    let date = new Date();\n\n    this.state = {\n      stars: {\n        proper: false,\n        names: false,\n        design: false\n      },\n      dtFormat: window.d3.time.format(\"%Y-%m-%d %H:%M:%S\"),\n      zenith: [0, 0],\n      geopos: [0, 0],\n      date,\n      zone: date.getTimezoneOffset()\n    }\n  }\n\n  toggleMenu = e => {\n    let hasClass = Utils.toggleClass(document.querySelector('#PlanetariumControls'), 'visible');\n\n    e.target.innerHTML = hasClass ? 'Close Controls' : 'Open Controls';\n  }\n\n  toggleConstellations = (e, callback) => {\n    let hasClass = Utils.toggleClass(e.target, 'on');\n\n    e.target.innerHTML = hasClass ? 'Hide Constellations' : 'Show Constellations';\n\n    callback(hasClass)\n  }\n\n  toggleStarsNames = (e, callback, option) => {\n    console.log(option);\n    let starsConfig = {...this.state.stars};\n    console.log(starsConfig)\n    let hasClass = Utils.toggleClass(e.target, 'on');\n\n    //let config = {stars: {}};\n    starsConfig[option] = hasClass; \n\n    if (starsConfig.desig) {\n      starsConfig.names = true\n      document.querySelector('#designations').innerHTML = 'Hide Designations';\n    }\n\n    if (!starsConfig.names) {\n      starsConfig.desig = false;\n      document.querySelector('#all-designations').innerHTML = 'Show All Designations';\n    }\n\n\n\n    switch (option) {\n      case 'proper':\n        e.target.innerHTML = hasClass ? 'Hide Proper Names' : 'Show Proper Names';\n        break;\n\n      case 'names':\n        e.target.innerHTML = hasClass ? 'Hide Designations' : 'Show Designations';\n        break;\n\n      case 'desig':\n        e.target.innerHTML = hasClass ? 'Hide All Designations' : 'Show All Designations';\n        break;\n    }\n\n    this.setState({...this.state, stars: starsConfig}, () => {\n      callback(hasClass, this.state.stars)\n\n    })\n\n  }\n\n  render() {\n    let constellationsOptions = [];\n    if (this.props.constellationsOptions) {\n      constellationsOptions = this.props.constellationsOptions.map(constellation => {\n        return <option value={constellation.center}>{constellation.name}</option>\n      })\n      constellationsOptions.unshift(<option value=''>Select Constellation</option>)\n    }\n\n    return (\n      <div id=\"PlanetariumControls\">\n        <button class=\"toggleMenu\" onClick={this.toggleMenu}>Open Controls</button>\n\n        <div class=\"menu\">\n          <section>\n            <p>Constellations</p>\n            <select name=\"culture\" id=\"culture\" onChange={this.props.changeCulture}>\n              <option value=\"western\">Western</option>\n              <option value=\"chinese\">Chinese</option>\n              <option value=\"aztec\">Aztec</option>\n              <option value=\"romanian\">Romanian</option>\n              <option value=\"egyptian\">Egyptian</option>\n            </select>\n\n            <select name=\"constellation\" id=\"constellation\" onChange={this.props.navigateToConstellation}>\n              {constellationsOptions}\n            </select>\n\n            <button className=\"on\" onClick={e => this.toggleConstellations(e, this.props.toggleConstellations)}>Hide Constellations</button>\n          </section>\n\n          <section>\n            <p>Stars</p>\n\n            <button onClick={e => this.toggleStarsNames(e, this.props.toggleStars, 'proper')}>Show Proper Names</button>\n            <button id=\"designations\" onClick={e => this.toggleStarsNames(e, this.props.toggleStars, 'names')}>Show Designations</button>\n            <span>Bayer, Flamsteed, Variable star, Gliese</span>\n            <button id=\"all-designations\" onClick={e => this.toggleStarsNames(e, this.props.toggleStars, 'desig')}>Show All Designations</button>\n            <span>Including Draper and Hipparcos</span>\n          </section>\n\n          <section>\n            <p>Date and Time</p>\n            {/* <div id=\"date\"></div> */}\n            <div id=\"celestial-form\"></div>\n          </section>\n\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nimport './css/celestial.css'\nimport './css/Planetarium.css'\n\nimport config from './config'\nimport celestialUtils from './celestial-utils'\nimport Constellations from './constellations'\nimport PlanetariumControls from '../PlanetariumControls/PlanetariumControls';\n\nexport default class Planetarium extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loaded: false,\n      showConstellations: true,\n      config: config.celestial, \n      activeCulture: 'western'\n    }\n  }\n\n  componentDidMount() {\n    Constellations.paintConstellations('western', this.state, config)\n      .then(navigationOptions => {\n        this.setState({ ...this.state, constellationsOptions: navigationOptions })\n        window.Celestial.display(this.state.config);\n        window.Celestial.zoomBy(1.5);\n      });\n  }\n\n  changeCulture = e => {\n    this.setState({...this.state, activeCulture: e.target.value})\n    window.Celestial.clear();\n    window.Celestial.redraw();\n    Constellations.paintConstellations(e.target.value, this.state, config)\n      .then(navigationOptions => {\n        this.setState({ ...this.state, constellationsOptions: navigationOptions })\n      })\n  }\n\n\n  toggleConstellations = show => {\n    if (show) {\n      Constellations.paintConstellations(this.state.activeCulture, this.state, config)\n    } else {\n      document.querySelectorAll(\"path.ast\").forEach(e => e.parentNode.removeChild(e));\n      window.Celestial.redraw();\n    }\n  }\n\n  toggleStars = (show, config) => {\n    console.log(config);\n    const {proper, names, desig} = config;\n\n    console.log(proper, names, desig)\n\n    const configCopy = {...this.state.config};\n    configCopy.stars.proper = proper;\n    configCopy.stars.names = names;\n    configCopy.stars.desig = desig;\n\n    console.log(configCopy)\n\n    this.setState({...this.state, config: configCopy}, () => {\n      console.log(this.state)\n      window.Celestial.apply(this.state.config);\n    })\n\n  }\n\n  navigateToConstellation = e => {\n    if (!e.target.value.length) return;\n\n    const coordinates = e.target.value.split(',');\n    coordinates[0] = +coordinates[0];\n    coordinates[1] = +coordinates[1];\n    coordinates[2] = 0;\n\n    let anims = [];\n\n    let configCopy = { ...this.state.config };\n    configCopy.center = coordinates;\n\n    this.state.config.transform = 'arya';\n\n    this.setState({ ...this.state, config: configCopy }, () => {\n      var z = window.Celestial.zoomBy();\n      if (z !== 1) {\n        anims.push({ param: \"zoom\", value: 1.55 / z, duration: 0 })\n      }\n      anims.push({ param: \"center\", value: this.state.config.center, duration: 0 });\n      var sc = 2;\n      anims.push({ param: \"zoom\", value: sc, duration: 0 });\n      window.Celestial.animate(anims, false);\n    });\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"Planetarium\" style={{ overflow: 'hidden' }}><div id=\"celestial-map\"></div></div>\n\n        <PlanetariumControls \n          toggleConstellations={this.toggleConstellations}\n          toggleStars={this.toggleStars} \n          changeCulture={this.changeCulture}\n          navigateToConstellation={this.navigateToConstellation}\n          constellationsOptions={this.state.constellationsOptions}\n        />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Planetarium from './components/Planetarium/Planetarium'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Planetarium />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}